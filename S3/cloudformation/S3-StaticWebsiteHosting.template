{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Create S3 bucket and policies for static website hosting.",

  "Parameters": {
    "BucketName": {
      "Description": "The name of the S3 bucket for static website hosting.",
      "Type": "String"
    },
    "IndexDoc": {
      "Description": "The file name of the index document.",
      "Type": "String",
      "Default": "index.html"
    },
    "EnableLogging": {
      "Description": "Enable logging.",
      "Type": "String",
      "AllowedValues": ["Enabled", "Suspended"],
      "Default": "Suspended"
    },
    "EnableVersioning": {
      "Description": "Enable versioning (Enabled or Suspended).",
      "Type": "String",
      "AllowedValues": ["Enabled", "Suspended"],
      "Default": "Suspended"
    },
    "ErrorDoc": {
      "Description": "The file name of the error document (e.g. error.html, index.html).",
      "Type": "String",
      "Default": "index.html"
    },
    "ReadWriteDeleteGroupName": {
      "Description": "Optional. Name of the Group to be created and given Read-Write-Delete access to the S3 bucket.",
      "Type": "String",
      "Default":""
    }
  },

  "Conditions": {
    "LoggingEnabled": {"Fn::Equals": ["Enabled", {"Ref": "EnableLogging"}]},
    "VersioningEnabled": {"Fn::Equals": ["Enabled", {"Ref": "EnableVersioning"}]},
    "ReadWriteDeleteGroupNameSpecified": {"Fn::Not": [{"Fn::Equals": ["", {"Ref": "ReadWriteDeleteGroupName"}]}]}
  },

  "Resources": {
    "S3BucketLogs": {
      "Type": "AWS::S3::Bucket",
      "Condition": "LoggingEnabled",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketName": {"Fn::Join": ["-", [{"Ref": "BucketName"}, "logs"]]},
        "VersioningConfiguration": {"Status": "Suspended"}
      }
    },

    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {"Ref":"BucketName"},
        "AccessControl": "PublicRead",
        "WebsiteConfiguration": {
          "IndexDocument": {"Ref": "IndexDoc"},
          "ErrorDocument": {"Ref": "ErrorDoc"}
        },
        "LoggingConfiguration": {
          "Fn::If" : [
            "LoggingEnabled", 
            {"DestinationBucketName": {"Ref": "S3BucketLogs"}}, 
            {"Ref": "AWS::NoValue"}
          ]
        },
        "VersioningConfiguration": {"Status": {"Ref": "EnableVersioning"}}
      },
      "DeletionPolicy": "Delete"
    },

    "S3BucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "DependsOn": ["S3Bucket"],
      "Properties": {
        "Bucket": {"Ref": "BucketName"},
        "PolicyDocument": {
          "Statement": [
            {
              "Sid": "PublicReadForGetBucketObjects",
              "Action": ["s3:GetObject"],
              "Effect": "Allow",
              "Resource": {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "BucketName"}, "/*"]]},
              "Principal": "*"
            }
         ]
        }
      }
    },

    "IamGroupReadWriteDelete": {
      "Type": "AWS::IAM::Group",
      "Condition": "ReadWriteDeleteGroupNameSpecified",
      "Properties": {
        "GroupName": {"Ref": "ReadWriteDeleteGroupName"}
      }
    },
    "ManagedPolicyS3": {
      "Type": "AWS::IAM::ManagedPolicy",
      "DependsOn": ["S3Bucket"],
      "Properties": {
        "Description": "Managed Policy for accessing S3 bucket (read/write/delete)",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": ["s3:ListAllMyBuckets"],
              "Resource": "arn:aws:s3:::*"},
            {
              "Effect": "Allow",
              "Action": ["s3:ListBucket", "s3:GetBucketLocation"],
              "Resource": {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "BucketName"}]]}
            },
            {
              "Effect": "Allow",
              "Action": ["s3:PutObject*", "s3:GetObject", "s3:DeleteObject"],
              "Resource": {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "BucketName"}, "/*"]]}
            }
         ]
        },
        "Groups": [{
          "Fn::If" : [
            "ReadWriteDeleteGroupNameSpecified",
            {"Ref": "ReadWriteDeleteGroupName"},
            {"Ref": "AWS::NoValue"}
          ]
        }]
      }
    }
  },

  "Outputs": {
    "WebsiteURL": {
      "Description": "URL for website hosted on S3",
      "Value": {"Fn::GetAtt": ["S3Bucket", "WebsiteURL"]}
    },
    "S3BucketSecureURL": {
      "Description": "Name of S3 bucket to hold website content",
      "Value": {"Fn::Join": ["", ["https://", {"Fn::GetAtt": ["S3Bucket", "DomainName"]}]]}
    }
  }
}
