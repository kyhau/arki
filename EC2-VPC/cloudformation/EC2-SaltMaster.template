{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Create a EC2 instance as a salt-master.",

  "Parameters": {
    "EC2Name": {
      "Description": "EC2 Name.",
      "Type": "String"
    },
    "EC2HostName": {
      "Description": "Hostname of the EC2 instance (will be written into /etc/hostname).",
      "Type": "String"
    },
    "AMI": {
      "Description": "The AMI ID of the image that the EC2 instance to be created from (check and update to use the latest Ubuntu).",
      "Type": "AWS::EC2::Image::Id",
      "Default": "ami-4e686b2d"
    },
    "InstanceType": {
      "Description": "EC2 instance type",
      "Type": "String",
      "Default": "t2.medium",
      "AllowedValues": [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "VolumeType": {
      "Description": "The volume type. This can be gp2 for General Purpose SSD, or standard for Magnetic volume (add io1 for Provisioned IOPS SSD, st1 for Throughput Optimized HDD, sc1 for Cold HDD, if needed).",
      "Type": "String",
      "Default": "standard",
      "AllowedValues": ["standard", "gp2"]
    },
    "VolumeSize": {
      "Description": "The size of the volume, in gibibytes (GiBs).",
      "Type": "Number",
      "Default": "8"
    },
    "DeleteOnTermination": {
      "Description": "Delete on termination.",
      "Type": "String",
      "Default": "false",
      "AllowedValues": ["true", "false"]
    },
    "InstanceRole": {
      "Description": "Instance IAM Role.",
      "Type": "String",
      "Default": "devops"
    },
    "SubnetID": {
      "Description": "Subnet ID.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "SecurityGroupID": {
      "Description": "Security Group ID.",
      "Type": "AWS::EC2::SecurityGroup::Id"
    },
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "SaltVersion": {
      "Description": "Optional. Salt-master version to be installed.",
      "Type": "String",
      "Default": "2016.11.3"
    },
    "ServiceTag": {
      "Description": "Value of the tag Service",
      "Type": "String",
      "Default": "salt-master",
      "AllowedValues": ["salt-master"],
      "ConstraintDescription": "must be a predefined Tag."
    }
  },

  "Conditions": {
    "SaltVersionSpecified": {"Fn::Not": [{"Fn::Equals": ["", {"Ref": "SaltVersion"}]}]}
  },

  "Resources": {
    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {"Comment": "EC2" },
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": {"Ref": "AMI" },
        "InstanceType": {"Ref": "InstanceType" },
        "IamInstanceProfile": {"Ref": "InstanceRole" },
        "KeyName": {"Ref": "KeyName" },
        "Monitoring": "false",
        "UserData": {"Fn::Base64" : {"Fn::Join" : ["", [
          "#!/bin/bash -xe\n",
          "sudo hostname ", {"Ref" : "EC2HostName" }, "\n",
          "sed -i '1i 127.0.0.1 ", {"Ref" : "EC2HostName" }, " ' /etc/hosts\n",
          "echo ", {"Ref" : "EC2HostName" }, " > /etc/hostname\n",
          "hostname -F /etc/hostname\n",
          {"Fn::If": [
            "SaltVersionSpecified",
            {
              "Fn::Join" : ["", [
                "curl -o bootstrap-salt.sh -L https://bootstrap.saltstack.com\n",
                "sudo sh bootstrap-salt.sh -P -M git v", {"Ref": "SaltVersion"}, "\n",
                "sudo mkdir -p /srv/{salt,pillar}\n",
                "sed -i -e 's/#master: salt/master: 127.0.0.1/g' /etc/salt/minion\n",
                "sudo service salt-master restart\n",
                "sudo service salt-minion restart\n",
                "sudo salt-key -A -y\n"
              ]]
            },
            {"Ref": "AWS::NoValue" }
          ]}
        ]]}},
        "NetworkInterfaces": [{
          "AssociatePublicIpAddress": "true",
          "DeleteOnTermination": "true",
          "Description": "Primary network interface",
          "DeviceIndex": 0,
          "GroupSet": [ {"Ref": "SecurityGroupID" } ],
          "SubnetId": {"Ref": "SubnetID" }
        }],
        "BlockDeviceMappings": [{
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeType": {"Ref": "VolumeType" },
              "VolumeSize": {"Ref": "VolumeSize" },
              "DeleteOnTermination": {"Ref": "DeleteOnTermination" }
            }
        }],
        "Tags": [
          {"Key": "Application", "Value": {"Ref": "AWS::StackName"} },
          {"Key": "Name", "Value": {"Ref": "EC2Name"} },
          {"Key": "Inspect", "Value": "ALL" },
          {"Key": "Service", "Value": {"Ref": "ServiceTag"} }
        ]
      }
    },

    "IPAddress": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": [ "EC2Instance" ],
      "Properties": {
        "Domain": "vpc",
        "InstanceId": {"Ref": "EC2Instance" }
      }
    }
  },

  "Outputs": {
    "PublicIP": {
      "Description": "The public IP address of the instance.",
      "Value": {"Fn::GetAtt": [ "EC2Instance", "PublicIp" ] }
    },
    "PrivateIP": {
      "Description": "The private IP address of the instance.",
      "Value": {"Fn::GetAtt": [ "EC2Instance", "PrivateIp" ] }
    }
  }
}
